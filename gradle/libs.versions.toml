[versions]
#build info
app-packageName = "bridge.supplies.foundation"
app-name = "Foundation"
app-description = "Foundational KMP Compose template application."
app-copyright = "Â© 2025 Bridge Supplies. All rights reserved."
app-vendor = "Bridge Supplies"
app-versionName = "1.2.1" # "Version"
app-versionCode = "202506120" # "Build"
android-minSdk = "28"
android-targetSdk = "35"
android-compileSdk = "35"
#packages
agp = "8.10.1"
junit = "4.13.2"
androidx-core-ktx = "1.16.0"
androidx-activity-compose = "1.10.1"
compose-plugin = "1.8.1"
kotlin = "2.2.0-RC2"
kotlinx-datetime = "0.6.2"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization-json = "1.8.1"
koin = "4.0.4"
moko = "0.19.1"
lifecycle-viewmodel = "2.9.1" # matched to compose-plugin version
lifecycle-viewmodel-compose = "2.9.0" # matched to compose-plugin version
navigation-compose = "2.9.0-beta02" # matched to compose-plugin version
androidx-datastore = "1.1.7"
buildconfig = "5.6.5"
korlibs-krypto = "4.0.10"
korlibs-compression = "6.0.0"
material-kolor = "2.1.1"
license-report = "2.9"
g0dkar-qrcode-kotlin = "4.1.1"
kscan = "0.1.0-beta07"

[libraries]
junit = { group = "junit", name = "junit", version.ref = "junit" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle-viewmodel"}
androidx-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle-viewmodel-compose"}
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "androidx-datastore"}
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-datastore"}
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
moko-permissions = { module = "dev.icerock.moko:permissions", version.ref = "moko" }
moko-permissions-camera = { module = "dev.icerock.moko:permissions-camera", version.ref = "moko" }
moko-permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "moko" }
soywiz-korlibs-krypto = { module = "com.soywiz.korlibs.krypto:krypto", version.ref = "korlibs-krypto" } # Encryption/Decryption
soywiz-korlibs-compression = { module = "com.soywiz:korlibs-compression", version.ref = "korlibs-compression" } # Zipping/unzipping
material-kolor = { module = "com.materialkolor:material-kolor", version.ref = "material-kolor" }
g0dkar-qrcode-kotlin = { module = "io.github.g0dkar:qrcode-kotlin", version.ref = "g0dkar-qrcode-kotlin" } # Android/iOS/Desktop QR generation
ismai117-kscan = { module = "io.github.ismai117:KScan", version.ref = "kscan" } # Android/iOS QR scanning

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
gmazzo-buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
jk1-license-report = { id = "com.github.jk1.dependency-license-report", version.ref = "license-report" }